/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Q-USER
 */
public class InterGestionPersonas extends javax.swing.JInternalFrame {
    
    private Empresa empresa;
    SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
    private Cliente cliente ;
    String fNac;
    java.sql.Date sqlPackageDate;
    DefaultTableModel modelo;    //Modelo por defecto de la Tabla
    /**
     * Creates new form InterGestionCliente
     */
    public InterGestionPersonas() {
        initComponents();
        
        tablaClientes.getTableHeader().setReorderingAllowed(false);//Bloquea el movimiento de las columnas, e impide imvertir la información.
        inhabilitarbotones();
        
         //Permite centrar el JinternalFrame
        int x = JfrPrincipal.escritorio.getWidth() - this.getWidth();
        int y = JfrPrincipal.escritorio.getHeight() - this.getHeight();
        setLocation(x / 2, y / 2);
    }
    
    public InterGestionPersonas(Empresa empresa) {
        initComponents();
        
        this.empresa = empresa;
        inhabilitarbotones();
        
        tablaClientes.getTableHeader().setReorderingAllowed(false);//Bloquea el movimiento de las columnas, e impide imvertir la información.
        
         //Permite centrar el JinternalFrame
        int x = JfrPrincipal.escritorio.getWidth() - this.getWidth();
        int y = JfrPrincipal.escritorio.getHeight() - this.getHeight();
        setLocation(x / 2, y / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioGenero = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnLimpiar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnHombre = new javax.swing.JRadioButton();
        txtEmail = new javax.swing.JTextField();
        boxTID = new javax.swing.JComboBox<>();
        btnMujer = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtTel = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        txtDir = new javax.swing.JTextField();
        txtDoc = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtFechaNac = new com.toedter.calendar.JDateChooser();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();

        setClosable(true);

        btnGuardar.setBackground(new java.awt.Color(0, 153, 0));
        btnGuardar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnGuardar.setText("Enviar");
        btnGuardar.setBorderPainted(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(153, 0, 0));
        btnLimpiar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnLimpiar.setText("Cancelar");
        btnLimpiar.setBorderPainted(false);
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel7.setText("Gestión clientes");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));

        radioGenero.add(btnHombre);
        btnHombre.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnHombre.setText("Hombre");

        txtEmail.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        boxTID.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        boxTID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "CC", "CE" }));

        radioGenero.add(btnMujer);
        btnMujer.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnMujer.setText("Mujer");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel10.setText("Fecha nacimiento");

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Tipo documento");

        txtTel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setText("Número documento");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setText("Teléfono");

        txtApellido.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        txtDir.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        txtDoc.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setText("Dirección");

        txtNombre.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setText("Correo eletrónico");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setText("Nombres");

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel9.setText("Género");

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel11.setText("Apellidos");

        txtFechaNac.setDateFormatString("yyyy-mm-dd");
        txtFechaNac.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtApellido)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(boxTID, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(6, 6, 6)
                                .addComponent(txtNombre))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnHombre)
                                .addGap(18, 18, 18)
                                .addComponent(btnMujer, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(425, 425, 425))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addGap(8, 8, 8)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(txtDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxTID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtFechaNac, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtDir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(btnHombre)
                    .addComponent(btnMujer)))
        );

        btnEliminar.setBackground(new java.awt.Color(153, 153, 0));
        btnEliminar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));

        tablaClientes.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaClientes);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(16, 16, 16))
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1173, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
           
        int id = 0;
        String nombre = txtNombre.getText().toUpperCase();
        String doc = txtDoc.getText();
        String apel = txtApellido.getText().toUpperCase();
        String TID = boxTID.getSelectedItem().toString();
        String tel = txtTel.getText();
        String dir = txtDir.getText().toUpperCase();
        String email = txtEmail.getText();                
        char genero = ' ';

        if (btnHombre.isSelected()){ genero = 'H'; }
        if(btnMujer.isSelected()) { genero = 'M'; }

        // Compara si todos los campos estan vacios
        boolean comp1 = nombre.equals("") || apel.equals("") || TID.equals("Seleccione...") || txtFechaNac.getDate() == null ;
        boolean comp2 = tel.equals("") ||  dir.equals("") || email.equals("") || genero == ' ';

        if ( comp1 || comp2 ){
            JOptionPane.showMessageDialog(null, "Debe diligenciar todos los campos.");
        } else {                
            //Permite obtener solo la fecha 1900/01/01 desde un JDatechooser
            sqlPackageDate = new java.sql.Date(txtFechaNac.getDate().getTime());
            /// Da formato a la fecha obtenida en la linea anterior
            fNac = df.format(sqlPackageDate);
            cliente = new Cliente(id, TID, doc, nombre, apel, fNac,  genero, tel,  dir, email);                        
            boolean res = empresa.agregarCliente(cliente);
            if (res == true) {
                JOptionPane.showMessageDialog(null, "Datos almacenados exitosamente.");                                
                obtenerListarClientes();                
                disenoTabla();
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(null, "Error en el proceso de almacenamiento.");
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarCampos();
        habilitarbotonesLimpiar();
        obtenerListarClientes();
        disenoTabla();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void tablaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClientesMouseClicked
        
        int fila = tablaClientes.getSelectedRow();
        
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "No se ha seleccionadao ningún registro de la tabla");
            btnActualizar.setEnabled(false);
            btnEliminar.setEnabled(false);            
        } else {          
            habilitarbotones();
            String TID = (String)tablaClientes.getValueAt(fila, 1);
            String doc = (String)tablaClientes.getValueAt(fila, 2);
            String nom = (String)tablaClientes.getValueAt(fila, 3);
            String apel = (String)tablaClientes.getValueAt(fila, 4);            
            String fNac = (String) tablaClientes.getValueAt(fila, 5);            
            String genero = (String)tablaClientes.getValueAt(fila, 6);
            String tel =  (String)tablaClientes.getValueAt(fila, 8);            
            String mail = (String)tablaClientes.getValueAt(fila, 9);
            String dir = (String)tablaClientes.getValueAt(fila, 10);            
            
            
            boxTID.setSelectedItem(TID);
            txtDoc.setText(doc);
            txtNombre.setText(nom);       
            txtApellido.setText(apel); 
            Date date = null;
            try {
                date = new SimpleDateFormat("yyyy-mm-dd").parse(fNac);
            } catch (ParseException ex) {
                Logger.getLogger(InterGestionPersonas.class.getName()).log(Level.SEVERE, null, ex);
            }
            txtFechaNac.setDate(date);
            if ("H".equals(genero)) {
                btnHombre.setSelected(true);
            } else {
                btnMujer.setSelected(true);
            }
            txtTel.setText(tel);
            txtDir.setText(dir);
            txtEmail.setText(mail);
        }
    }//GEN-LAST:event_tablaClientesMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        
        int id = 0;
        String nombre = txtNombre.getText().toUpperCase();
        String doc = txtDoc.getText();
        String apel = txtApellido.getText().toUpperCase();
        String TID = boxTID.getSelectedItem().toString();
        String tel = txtTel.getText();
        String dir = txtDir.getText().toUpperCase();
        String email = txtEmail.getText();   
        char genero = ' ';

        if (btnHombre.isSelected()){ genero = 'H'; }
        if(btnMujer.isSelected()) { genero = 'M'; }
        
        // Compara si todos los campos estan vacios
        boolean comp1 = nombre.equals("") || apel.equals("") || TID.equals("Seleccione...") || txtFechaNac.getDate() == null ;
        boolean comp2 = tel.equals("") ||  dir.equals("") || email.equals("") || genero == ' ';

        int fila = tablaClientes.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Seleccionar el registro de la tabla");
        } else {
            if (comp1 || comp2) {
                JOptionPane.showMessageDialog(null, "La información no registra ningún cambio.");
            } else {      
                //Permite obtener solo la fecha 1900/01/01 desde un JDatechooser
                java.sql.Date sqlPackageDate = new java.sql.Date(txtFechaNac.getDate().getTime());
                /// Da formato a la fecha obtenida en la linea anterior
                String fNac = df.format(sqlPackageDate);
                cliente = new Cliente(id, TID, doc, nombre, apel, fNac,  genero, tel,  dir, email);                        
                boolean res = empresa.modificarCliente(fila, cliente);
                if (res == true) {
                    JOptionPane.showMessageDialog(null, "Datos Actualizados exitosamente.");    
                    //limpiarTabla(modelo);
                    obtenerListarClientes();                
                    disenoTabla();
                    limpiarCampos();
                } else {
                    JOptionPane.showMessageDialog(null, "Error en el proceso de almacenamiento.");
                }
            }
        }   
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        
        int id = 0;
        String nombre = txtNombre.getText().toUpperCase();
        String doc = txtDoc.getText();
        String apel = txtApellido.getText().toUpperCase();
        String TID = boxTID.getSelectedItem().toString();
        String tel = txtTel.getText();
        String dir = txtDir.getText().toUpperCase();
        String email = txtEmail.getText();   
        char genero = ' ';

        if (btnHombre.isSelected()){ genero = 'H'; }
        if(btnMujer.isSelected()) { genero = 'M'; }
        
        // Compara si todos los campos estan vacios
        boolean comp1 = nombre.equals("") || apel.equals("") || TID.equals("Seleccione...") || txtFechaNac.getDate() == null ;
        boolean comp2 = tel.equals("") ||  dir.equals("") || email.equals("") || genero == ' ';
        inhabilitarCampos();
        int fila = tablaClientes.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Seleccionar el registro de la tabla");
        } else {
            if (comp1 || comp2) {
                JOptionPane.showMessageDialog(null, "La información no registra ningún cambio.");
            } else {      
                //Permite obtener solo la fecha 1900/01/01 desde un JDatechooser
                java.sql.Date sqlPackageDate = new java.sql.Date(txtFechaNac.getDate().getTime());
                /// Da formato a la fecha obtenida en la linea anterior
                String fNac = df.format(sqlPackageDate);
                cliente = new Cliente(id, TID, doc, nombre, apel, fNac,  genero, tel,  dir, email);                        
                int op = JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar el registro?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
                if (op == JOptionPane.YES_OPTION) {                    
                    boolean res = empresa.eliminarCliente(fila);
                    if (res == true) {
                        JOptionPane.showMessageDialog(null, "Registro eliminado exitosamente.");
                        obtenerListarClientes();
                        limpiarCampos();
                        habilitarCampos();
                    } else {
                        JOptionPane.showMessageDialog(null, "Error en el proceso de almacenamiento.");
                    }                    
                }
                obtenerListarClientes();
                disenoTabla();
                limpiarCampos();
                inhabilitarbotones();
                habilitarCampos();
            }
        }       
        
    }//GEN-LAST:event_btnEliminarActionPerformed
  
    public void habilitarCampos() {
        boxTID.setEnabled(true);
        txtDoc.setEnabled(true);
        txtNombre.setEnabled(true);       
        txtApellido.setEnabled(true); 
        txtFechaNac.setEnabled(true);
        btnHombre.setEnabled(true);
        btnMujer.setEnabled(true);
        txtTel.setEnabled(true);
        txtDir.setEnabled(true);
        txtEmail.setEnabled(true);     
    }

    public void inhabilitarCampos() {
        boxTID.setEnabled(false);
        txtDoc.setEnabled(false);
        txtNombre.setEnabled(false);       
        txtApellido.setEnabled(false); 
        txtFechaNac.setEnabled(false);
        btnHombre.disable();
        btnMujer.disable();
        txtTel.setEnabled(false);
        txtDir.setEnabled(false);
        txtEmail.setEnabled(false);
    }

    public void inhabilitarbotones() {
        btnGuardar.setEnabled(true);
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);        
    }

    public void habilitarbotonesLimpiar() {
        obtenerListarClientes();
        disenoTabla();
        btnGuardar.setEnabled(true);
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);        
    }
      public void habilitarbotones() {        
        btnGuardar.setEnabled(false);
        btnActualizar.setEnabled(true);
        btnEliminar.setEnabled(true);        
    }
    
    /***
     * Metodo para listar los clientes en la tabla
     */
    public void obtenerListarClientes() {       
        
        modelo = new DefaultTableModel();
        modelo.addColumn("Id");
        modelo.addColumn("Tid");
        modelo.addColumn("Documento");
        modelo.addColumn("Nombres");
        modelo.addColumn("Apellidos");
        modelo.addColumn("Fecha Nacimiento");
        modelo.addColumn("Genero");
        modelo.addColumn("Edad");        
        modelo.addColumn("Teléfono");
        modelo.addColumn("Correo electrónico");
        modelo.addColumn("Dirección");
        
        String[] user = new String[11];
        
        for (int i = 0; i < empresa.getClientes().size(); i++) {
            
            user[0] = String.valueOf(empresa.getClientes().get(i).getId());
            user[1] = String.valueOf(empresa.getClientes().get(i).getTID());
            user[2] = String.valueOf(empresa.getClientes().get(i).getDocumento());
            user[3] = String.valueOf(empresa.getClientes().get(i).getNombre());
            user[4] = String.valueOf(empresa.getClientes().get(i).getApellidos());
            user[5] = String.valueOf(empresa.getClientes().get(i).getFechaNacimiento());
            user[6] = String.valueOf(empresa.getClientes().get(i).getGenero());
            user[7] = String.valueOf(cliente.calcularEdad());
            user[8] = String.valueOf(empresa.getClientes().get(i).getTelefono());
            user[9] = String.valueOf(empresa.getClientes().get(i).getEmail());
            user[10] = String.valueOf(empresa.getClientes().get(i).getDireccion());
            modelo.addRow(user);
        }
            
        

        tablaClientes.setModel(modelo);
    }
    
    /**
     * Metodo para limpiar pantalla
     */
    public void limpiarCampos(){
        txtDoc.setText("");
        txtNombre.setText("");
        txtApellido.setText("");
        boxTID.setSelectedItem("Seleccione...");
        txtTel.setText("");
        txtDir.setText("");
        txtEmail.setText("");
        txtFechaNac.setDate(null);         
        radioGenero.clearSelection();
    }
    
    
    //Método para diseñar las columnas de la tabla Empresa
    void disenoTabla() {
        //Redimensionar el tamaño de las columnas de la tabla.        
        tablaClientes.getColumnModel().getColumn(0).setMaxWidth(0);
        tablaClientes.getColumnModel().getColumn(0).setMinWidth(0);
        tablaClientes.getColumnModel().getColumn(0).setPreferredWidth(0);
        //.
        tablaClientes.getColumnModel().getColumn(1).setMaxWidth(30);
        tablaClientes.getColumnModel().getColumn(1).setMinWidth(30);
        tablaClientes.getColumnModel().getColumn(1).setPreferredWidth(30);
        //.
        tablaClientes.getColumnModel().getColumn(2).setMaxWidth(120);
        tablaClientes.getColumnModel().getColumn(2).setMinWidth(120);
        tablaClientes.getColumnModel().getColumn(2).setPreferredWidth(120);
        //.De este modo se oculta la columna 
        tablaClientes.getColumnModel().getColumn(3).setMaxWidth(150);
        tablaClientes.getColumnModel().getColumn(3).setMinWidth(150);
        tablaClientes.getColumnModel().getColumn(3).setPreferredWidth(150);
        //De este modo se oculta la columna 
        tablaClientes.getColumnModel().getColumn(4).setMaxWidth(150);
        tablaClientes.getColumnModel().getColumn(4).setMinWidth(150);
        tablaClientes.getColumnModel().getColumn(4).setPreferredWidth(150);
        //De este modo se oculta la columna 
        tablaClientes.getColumnModel().getColumn(5).setMaxWidth(120);
        tablaClientes.getColumnModel().getColumn(5).setMinWidth(120);
        tablaClientes.getColumnModel().getColumn(5).setPreferredWidth(120);
        //De este modo se oculta la columna 
        tablaClientes.getColumnModel().getColumn(6).setMaxWidth(60);
        tablaClientes.getColumnModel().getColumn(6).setMinWidth(60);
        tablaClientes.getColumnModel().getColumn(6).setPreferredWidth(60);
        //De este modo se oculta la columna 
        tablaClientes.getColumnModel().getColumn(7).setMaxWidth(40);
        tablaClientes.getColumnModel().getColumn(7).setMinWidth(40);
        tablaClientes.getColumnModel().getColumn(7).setPreferredWidth(40);
        //De este modo se oculta la columna 
        tablaClientes.getColumnModel().getColumn(8).setMaxWidth(90);
        tablaClientes.getColumnModel().getColumn(8).setMinWidth(90);
        tablaClientes.getColumnModel().getColumn(8).setPreferredWidth(90);
        //De este modo se oculta la columna 
        tablaClientes.getColumnModel().getColumn(9).setMaxWidth(190);
        tablaClientes.getColumnModel().getColumn(9).setMinWidth(190);
        tablaClientes.getColumnModel().getColumn(9).setPreferredWidth(190);
        //De este modo se oculta la columna 
        tablaClientes.getColumnModel().getColumn(9).setMaxWidth(190);
        tablaClientes.getColumnModel().getColumn(9).setMinWidth(190);
        tablaClientes.getColumnModel().getColumn(9).setPreferredWidth(190);

    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxTID;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JRadioButton btnHombre;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JRadioButton btnMujer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public static javax.swing.ButtonGroup radioGenero;
    public javax.swing.JTable tablaClientes;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtDir;
    private javax.swing.JTextField txtDoc;
    private javax.swing.JTextField txtEmail;
    private com.toedter.calendar.JDateChooser txtFechaNac;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTel;
    // End of variables declaration//GEN-END:variables
}
